Index: src/com/softserve/academy/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.softserve.academy;\r\n\r\n\r\nimport com.softserve.academy.basic.MainBasic;\r\nimport com.softserve.academy.classes.MainClasses;\r\nimport com.softserve.academy.collections.MainCollection;\r\nimport com.softserve.academy.conditions.MainConditions;\r\nimport com.softserve.academy.loops.MainLoops;\r\nimport com.softserve.academy.opp.MainOPP;\r\nimport com.softserve.academy.string.MainString;\r\n\r\nimport java.io.BufferedReader;\r\nimport java.io.IOException;\r\nimport java.io.InputStreamReader;\r\n\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\r\n        text();\r\n        try {\r\n            switch (br.readLine()) {\r\n                case \"1\":\r\n                    MainBasic.main(args);\r\n                    break;\r\n                case \"2\":\r\n                    MainClasses.main(args);\r\n                    break;\r\n                case \"3\":\r\n                    MainCollection.main(args);\r\n                    break;\r\n                case \"4\":\r\n                    MainConditions.main(args);\r\n                    break;\r\n                case \"5\":\r\n                    MainLoops.main(args);\r\n                    break;\r\n                case \"6\":\r\n                    MainOPP.main(args);\r\n                    break;\r\n                case \"7\":\r\n                    MainString.main(args);\r\n                    break;\r\n                default:\r\n                    System.err.println(ConsoleColors.RED +\"You need to put number with 1 to 7 \");\r\n                    System.err.println(\"You transfer to menu \"+ ConsoleColors.RESET);\r\n                    Main.main(args);\r\n            }\r\n        } catch (IOException e) {\r\n            System.err.println(e.getMessage());\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    private static void text() {\r\n        System.out.println(ConsoleColors.GREEN + \"Please enter group number\" + ConsoleColors.RESET);\r\n        System.out.println(ConsoleColors.GREEN + \"1\" + ConsoleColors.RESET + \"  Basic\");\r\n        System.out.println(ConsoleColors.GREEN + \"2\" + ConsoleColors.RESET + \"  Classes\");\r\n        System.out.println(ConsoleColors.GREEN + \"3\" + ConsoleColors.RESET + \"  Collections\");\r\n        System.out.println(ConsoleColors.GREEN + \"4\" + ConsoleColors.RESET + \"  Conditions\");\r\n        System.out.println(ConsoleColors.GREEN + \"5\" + ConsoleColors.RESET + \"  Loops\");\r\n        System.out.println(ConsoleColors.GREEN + \"6\" + ConsoleColors.RESET + \"  OPP\");\r\n        System.out.println(ConsoleColors.GREEN + \"7\" + ConsoleColors.RESET + \"  String\");\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/softserve/academy/Main.java b/src/com/softserve/academy/Main.java
--- a/src/com/softserve/academy/Main.java	
+++ b/src/com/softserve/academy/Main.java	
@@ -1,6 +1,5 @@
 package com.softserve.academy;
 
-
 import com.softserve.academy.basic.MainBasic;
 import com.softserve.academy.classes.MainClasses;
 import com.softserve.academy.collections.MainCollection;
@@ -9,6 +8,7 @@
 import com.softserve.academy.opp.MainOPP;
 import com.softserve.academy.string.MainString;
 
+
 import java.io.BufferedReader;
 import java.io.IOException;
 import java.io.InputStreamReader;
Index: test/basic/TestDoubleInteger.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package basic;\r\n\r\nimport com.softserve.academy.basic.DoubleInteger;\r\nimport org.junit.Assert;\r\nimport org.junit.Test;\r\n\r\npublic class TestDoubleInteger {\r\n    @Test\r\n    public final void test_all() {\r\n        Assert.assertEquals(\"Nope!\", 4, DoubleInteger.doubleInteger(2));\r\n        Assert.assertEquals(\"Nope!\", 6,  DoubleInteger.doubleInteger(3));\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/test/basic/TestDoubleInteger.java b/test/basic/TestDoubleInteger.java
--- a/test/basic/TestDoubleInteger.java	
+++ b/test/basic/TestDoubleInteger.java	
@@ -1,13 +1,13 @@
 package basic;
 
 import com.softserve.academy.basic.DoubleInteger;
-import org.junit.Assert;
-import org.junit.Test;
+import org.junit.*;
+
 
 public class TestDoubleInteger {
     @Test
     public final void test_all() {
-        Assert.assertEquals("Nope!", 4, DoubleInteger.doubleInteger(2));
+       Assert.assertEquals("Nope!", 4, DoubleInteger.doubleInteger(2));
         Assert.assertEquals("Nope!", 6,  DoubleInteger.doubleInteger(3));
     }
 }
Index: .gitignore
===================================================================
diff --git a/.gitignore b/.gitignore
deleted file mode 100644
--- a/.gitignore	
+++ /dev/null	
@@ -1,23 +0,0 @@
-# Compiled class file
-*.class
-
-# Log file
-*.log
-
-# BlueJ files
-*.ctxt
-
-# Mobile Tools for Java (J2ME)
-.mtj.tmp/
-
-# Package Files #
-*.jar
-*.war
-*.nar
-*.ear
-*.zip
-*.tar.gz
-*.rar
-
-# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml
-hs_err_pid*
Index: .idea/.gitignore
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
deleted file mode 100644
--- a/.idea/.gitignore	
+++ /dev/null	
@@ -1,8 +0,0 @@
-# Default ignored files
-/shelf/
-/workspace.xml
-# Datasource local storage ignored files
-/dataSources/
-/dataSources.local.xml
-# Editor-based HTTP Client requests
-/httpRequests/
Index: JavaCore.iml
===================================================================
diff --git a/JavaCore.iml b/JavaCore.iml
deleted file mode 100644
--- a/JavaCore.iml	
+++ /dev/null	
@@ -1,22 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<module type="JAVA_MODULE" version="4">
-  <component name="NewModuleRootManager" inherit-compiler-output="true">
-    <exclude-output />
-    <content url="file://$MODULE_DIR$">
-      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
-      <sourceFolder url="file://$MODULE_DIR$/test" isTestSource="true" />
-    </content>
-    <orderEntry type="inheritedJdk" />
-    <orderEntry type="sourceFolder" forTests="false" />
-    <orderEntry type="module-library" scope="TEST">
-      <library name="JUnit4">
-        <CLASSES>
-          <root url="jar://$MAVEN_REPOSITORY$/junit/junit/4.13.1/junit-4.13.1.jar!/" />
-          <root url="jar://$MAVEN_REPOSITORY$/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar!/" />
-        </CLASSES>
-        <JAVADOC />
-        <SOURCES />
-      </library>
-    </orderEntry>
-  </component>
-</module>
\ No newline at end of file
Index: Java-Club-2.iml
===================================================================
diff --git a/Java-Club-2.iml b/Java-Club-2.iml
new file mode 100644
--- /dev/null	
+++ b/Java-Club-2.iml	
@@ -0,0 +1,37 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/test" isTestSource="false" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="module-library">
+      <library name="JUnit5.7.0">
+        <CLASSES>
+          <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter/5.7.0/junit-jupiter-5.7.0.jar!/" />
+          <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-api/5.7.0/junit-jupiter-api-5.7.0.jar!/" />
+          <root url="jar://$MAVEN_REPOSITORY$/org/apiguardian/apiguardian-api/1.1.0/apiguardian-api-1.1.0.jar!/" />
+          <root url="jar://$MAVEN_REPOSITORY$/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar!/" />
+          <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-commons/1.7.0/junit-platform-commons-1.7.0.jar!/" />
+          <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-params/5.7.0/junit-jupiter-params-5.7.0.jar!/" />
+          <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-engine/5.7.0/junit-jupiter-engine-5.7.0.jar!/" />
+          <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-engine/1.7.0/junit-platform-engine-1.7.0.jar!/" />
+        </CLASSES>
+        <JAVADOC />
+        <SOURCES />
+      </library>
+    </orderEntry>
+    <orderEntry type="module-library" exported="">
+      <library>
+        <CLASSES>
+          <root url="jar://$USER_HOME$/Downloads/junit-4.8.1.jar!/" />
+        </CLASSES>
+        <JAVADOC />
+        <SOURCES />
+      </library>
+    </orderEntry>
+  </component>
+</module>
\ No newline at end of file
Index: .idea/vcs.xml
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/vcs.xml	
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
